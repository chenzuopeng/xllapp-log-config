<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true" scanPeriod="30000">

    <!-- =================================
    
         此配置文件存放通用的日志配置 
         
         配置变量：
         
             log.moduleName   模块名,默认值:unnamed
         
             log.logger.root.level   日志输出级别,默认值:DEBUG
             
             log.encoderPattern     日志输出格式,默认值:%d{yyyy-MM-dd  HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n
         
             log.maxHistory  日志保存天数,默认值:7
         
             log.error.maxHistory  错误日志保存天数,默认值:7
         
             log.dir  日志文件的保存路径,默认值:logs
             
             log.errorCollectionEnabled  是否启用异常日志采集功能,默认:true
         
             log.jms.brokerUrl  ActiveMQ Broker的URL
          
             log.jms.userName 用户名
         
             log.jms.password  密码
         
     =================================  -->
     
    <!-- 加载配置文件 -->
	<property name="ENVIRONMENT" value="${spring.profiles.active:-${spring.profiles.default:-production}}" />
	<if condition='property("ENVIRONMENT").equalsIgnoreCase("production")'>
		<then>
			<property resource="application.properties" />
		</then>
		<else>
		    <property resource="application.properties" />
			<property resource="application.${ENVIRONMENT}.properties" />
		</else>
	</if>

	<!-- 应用名称 -->
	<property name="MODULE_NAME" value="${log.moduleName:-unnamed}" />
	
	<!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在运行目录下创建名为logs目录做日志存放的目录 -->
	<if condition='"${log.dir}".equalsIgnoreCase("log.dir_IS_UNDEFINED")'>
		 <then>
			<property name="LOG_HOME" value="logs" />
		</then>
		<else>
			<property name="LOG_HOME" value="${log.dir}/${MODULE_NAME}" />
		</else>
	</if>
	
	<!-- 默认的日志输出格式 -->
	<property name="DEFAULT_ENCODER_PATTERN" value="%d{yyyy-MM-dd  HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n" />
	
	<!-- 日志输出格式 -->
	<property name="ENCODER_PATTERN" value="${log.encoderPattern:-${DEFAULT_ENCODER_PATTERN}}" />

	<contextName>${MODULE_NAME}</contextName>

	<!-- 控制台日志：输出全部日志到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>${ENCODER_PATTERN}</Pattern>
		</encoder>
	</appender>

	<!-- 文件日志：输出全部日志到文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/output.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>${log.maxHistory:-7}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- 错误日志：用于将错误日志输出到独立文件 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>${log.error.maxHistory:-7}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
	</appender>
	
	<property name="LOGGER_ROOT_LEVEL"  value="${log.logger.root.level:-DEBUG}" />

    <!-- 错误日志：用于将错误日志输出到消息队列. 必须提供：log.jms.brokerUrl,log.jms.userName,log.jms.password这3个配置,否则不生效. -->
	<if condition='${log.errorCollectionEnabled:-true} == false ||  !isDefined("log.jms.brokerUrl") || !isDefined("log.jms.userName") || !isDefined("log.jms.password")'>
		<then>
		
			<root>
				<level value="${LOGGER_ROOT_LEVEL}" />
				<appender-ref ref="STDOUT" />
				<appender-ref ref="FILE" />
				<appender-ref ref="ERROR_FILE" />
			</root>

		</then>
		<else>
		
			<appender name="ERROR_JMS" class="org.xllapp.log.logback.ErrorJMSAppender">
				<moduleName>${MODULE_NAME}</moduleName>
				<brokerUrl>${log.jms.brokerUrl}</brokerUrl>
				<userName>${log.jms.userName}</userName>
				<password>${log.jms.password}</password>
			</appender>

			<root>
				<level value="${LOGGER_ROOT_LEVEL}" />
				<appender-ref ref="STDOUT" />
				<appender-ref ref="FILE" />
				<appender-ref ref="ERROR_FILE" />
				<appender-ref ref="ERROR_JMS" />
			</root>
		
		</else>
	</if>
	
    <include resource="logback-ext.xml" />
	
</configuration>